//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.sf.robocode.peer {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface IRobotPeer {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void drainEnergy();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void punishBadBehavior();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Z)V")]
        void setRunning(bool par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(LSystem/Object;)LSystem/Object;")]
        object waitForBattleEndImpl(object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(LSystem/Object;)LSystem/Object;")]
        object executeImpl(object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;")]
        global::java.nio.ByteBuffer executeImplSerial(global::java.nio.ByteBuffer par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;")]
        global::java.nio.ByteBuffer waitForBattleEndImplSerial(global::java.nio.ByteBuffer par0);
    }
    #endregion
    
    #region Component Designer generated code 
    public unsafe partial class IRobotPeer_ {
        
        public new static global::java.lang.Class _class {
            get {
                return global::net.sf.robocode.peer.@__IRobotPeer.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute()]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::net.sf.robocode.peer.IRobotPeer))]
    internal sealed unsafe partial class @__IRobotPeer : global::java.lang.Object, global::net.sf.robocode.peer.IRobotPeer {
        
        internal static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _drainEnergy0;
        
        internal static global::net.sf.jni4net.jni.MethodId _punishBadBehavior1;
        
        internal static global::net.sf.jni4net.jni.MethodId _setRunning2;
        
        internal static global::net.sf.jni4net.jni.MethodId _waitForBattleEndImpl3;
        
        internal static global::net.sf.jni4net.jni.MethodId _executeImpl4;
        
        internal static global::net.sf.jni4net.jni.MethodId _executeImplSerial5;
        
        internal static global::net.sf.jni4net.jni.MethodId _waitForBattleEndImplSerial6;
        
        protected @__IRobotPeer(global::net.sf.jni4net.jni.JNIEnv env) : 
                base(env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv env, java.lang.Class staticClass) {
            global::net.sf.robocode.peer.@__IRobotPeer.staticClass = staticClass;
            global::net.sf.robocode.peer.@__IRobotPeer._drainEnergy0 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "drainEnergy", "()V");
            global::net.sf.robocode.peer.@__IRobotPeer._punishBadBehavior1 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "punishBadBehavior", "()V");
            global::net.sf.robocode.peer.@__IRobotPeer._setRunning2 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "setRunning", "(Z)V");
            global::net.sf.robocode.peer.@__IRobotPeer._waitForBattleEndImpl3 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "waitForBattleEndImpl", "(Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;");
            global::net.sf.robocode.peer.@__IRobotPeer._executeImpl4 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "executeImpl", "(Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;");
            global::net.sf.robocode.peer.@__IRobotPeer._executeImplSerial5 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "executeImplSerial", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;");
            global::net.sf.robocode.peer.@__IRobotPeer._waitForBattleEndImplSerial6 = env.GetMethodID(global::net.sf.robocode.peer.@__IRobotPeer.staticClass, "waitForBattleEndImplSerial", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;");
        }
        
        public void drainEnergy() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            env.CallVoidMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._drainEnergy0);
        }
        
        public void punishBadBehavior() {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            env.CallVoidMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._punishBadBehavior1);
        }
        
        public void setRunning(bool par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            env.CallVoidMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._setRunning2, new global::net.sf.jni4net.jni.Value(par0));
        }
        
        public object waitForBattleEndImpl(object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<object>(env.CallObjectMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._waitForBattleEndImpl3, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        public object executeImpl(object par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<object>(env.CallObjectMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._executeImpl4, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        public global::java.nio.ByteBuffer executeImplSerial(global::java.nio.ByteBuffer par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.nio.ByteBuffer>(env.CallObjectMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._executeImplSerial5, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        public global::java.nio.ByteBuffer waitForBattleEndImplSerial(global::java.nio.ByteBuffer par0) {
            global::net.sf.jni4net.jni.JNIEnv env = this.Env;
            return global::net.sf.jni4net.Bridge.ToCLR<global::java.nio.ByteBuffer>(env.CallObjectMethod(this, global::net.sf.robocode.peer.@__IRobotPeer._waitForBattleEndImplSerial6, new global::net.sf.jni4net.jni.Value(par0)));
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv env, global::java.lang.Class clazz) {
            global::System.Type type = typeof(__IRobotPeer);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "drainEnergy", "drainEnergy0", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "punishBadBehavior", "punishBadBehavior1", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "setRunning", "setRunning2", "(Z)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "waitForBattleEndImpl", "waitForBattleEndImpl3", "(Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "executeImpl", "executeImpl4", "(Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "executeImplSerial", "executeImplSerial5", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(type, "waitForBattleEndImplSerial", "waitForBattleEndImplSerial6", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;"));
            return methods;
        }
        
        private static void drainEnergy0(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            real.drainEnergy();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static void punishBadBehavior1(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            real.punishBadBehavior();
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static void setRunning2(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, bool par0) {
            // (Z)V
            // (Z)V
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            real.setRunning(par0);
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
        }
        
        private static global::java.lang.Object.JavaPtr* waitForBattleEndImpl3(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;
            // (LSystem/Object;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.waitForBattleEndImpl(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* executeImpl4(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Lnet/sf/robocode/peer/ExecCommands;)Lnet/sf/robocode/peer/ExecResults;
            // (LSystem/Object;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.executeImpl(global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::System.Object>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* executeImplSerial5(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
            // (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.executeImplSerial(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.nio.ByteBuffer>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        private static global::java.lang.Object.JavaPtr* waitForBattleEndImplSerial6(global::net.sf.jni4net.jni.JNIEnv.JavaPtr* @__envi, global::java.lang.Object.JavaPtr* @__obj, global::java.lang.Object.JavaPtr* par0) {
            // (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
            // (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
            global::net.sf.jni4net.jni.JNIEnv @__env = (*@__envi).Wrap();
            try {
            global::net.sf.robocode.peer.IRobotPeer real = global::net.sf.jni4net.utils.ClrProxiesMap.ToClr<global::net.sf.robocode.peer.IRobotPeer>(__env, @__obj);
            return global::net.sf.jni4net.utils.ClrProxiesMap.WrapClr(@__env, real.waitForBattleEndImplSerial(global::net.sf.jni4net.utils.JavaProxiesMap.Wrap<global::java.nio.ByteBuffer>(__env, par0)));
            }catch (global::System.Exception ex){__env.ThrowExisting(ex);}
            return default(global::java.lang.Object.JavaPtr*);
        }
        
        internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJavaProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv env) {
                return new global::net.sf.robocode.peer.@__IRobotPeer(env);
            }
        }
    }
    #endregion
}
